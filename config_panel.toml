version = "1.0"

[main]
name = "Main Settings"
services = ["__APP__"]

    [main.permissions]
    name = "Permissions for using the bridge"

        [main.permissions.helptext]
        ask = '''
        Roles with Increasing Power: Relaybot<User<Puppeting<Full<Admin
        Allowed values for roles:
        - * : All Matrix users
        - domain.tld : All users on a given homeserver
        - mxid (@user:matrix.org) : Specific Matrix user
        '''
        type = "markdown"

        [main.permissions.listrelay]
        ask = "Users bridged thanks to Relay Mode"
        type = "tags"
        help = "Relay Role: Talk on Telegram through the RelayBot in a room. No access to commands."

        [main.permissions.listuser]
        ask = "Bridge Users"
        type = "tags"
        help = "User Role: Relaybot level + access to commands to create bridges."

        [main.permissions.listpuppeting]
        ask = "Bridge Puppeting"
        type = "tags"
        help = "Puppeting Role: User level + logging in with a Telegram account."

        [main.permissions.listfull]
        ask = "Bridge Full"
        type = "tags"
        help = "Full Role: Full access to use the bridge, i.e. previous levels + Matrix login."

        [main.permissions.listadmin]
        ask = "Bridge Administrators"
        type = "tags"
        help = "Admin Role: Full access to use the bridge and some extra administration commands."

    [main.bot]
    name = "Bot Settings"

        [main.bot.bot_username]
        ask = "Username of the AppService Bot"
        type = "string"
        help = "Sets bot username. Please keep in mind that the bot admin room for previous bot username will stop working so you may need to create a new one using the new username"
        bind = ":__INSTALL_DIR__/config.yaml"

        [main.bot.bot_displayname]
        ask = "Display name for Bot"
        type = "string"
        help = "Set to 'remove' to remove display name, leave empty to set default 'Telegram bridge bot'"
        bind = ":__INSTALL_DIR__/config.yaml"

        [main.bot.bot_avatar]
        ask = "Avatar for Bot"
        type = "string"
        help = "Should be in format 'mxc://server_name/NeXNQarUbrlYBiPCpprYsRqr', see README for tutorial. Set to 'remove' to remove avatar, leave empty to use standard Telegram logo."
        bind = ":__INSTALL_DIR__/config.yaml"

[privacy]
name = "Privacy"
services = ["__APP__"]

    [privacy.portal_rooms]
    name = "Portal Rooms & Encryption Settings"

        [privacy.portal_rooms.text]
        ask = '''
        !! Inviting the Bridge in an encrypted room          !!
        !! breaks real End-to-End Encryption (e2ee)          !! 
        !! Messages will be unencrypted on the Bridge Server !!
        '''
        type = "markdown"

        [privacy.portal_rooms.encryption]
        ask = "Allow Encryption between Matrix Client and Bridge Server?"
        type = "boolean"
        yes = "true"
		no = "false"
        help = "Enable so-called End-to-Bridge (e2b) Encryption. For the Bridge to work in group chat Rooms with End-to-End Encryption (e2ee) enabled."
        bind = "encryption>allow:__INSTALL_DIR__/config.yaml"
        
        [privacy.portal_rooms.encryption_default]
        ask = "Force-enable Encryption in all Portal Rooms the Bridge creates?"
        type = "boolean"
        yes = "true"
		no = "false"
        help = "This will cause the Bridge Bot to be in private chats for the Encryption to work properly."
        bind = "encryption>default:__INSTALL_DIR__/config.yaml"
        visible = "encryption"

        [privacy.portal_rooms.encryption_require]
        ask = "Require encryption?"
        type = "boolean"
        yes = "true"
        no = "false"
        help = "Require encryption, drop any unencrypted messages."
        bind = "encryption>require:__INSTALL_DIR__/config.yaml"
        visible = "encryption"

    [privacy.config]
    name = "Privacy Settings"

        [privacy.config.delivery_receipts]
        ask = "Enable Delivery Receipts?"
        type = "boolean"
        yes = "true"
        no = "false"
        help = "Should the bridge send a read Receipt from the bridge bot when a message has been sent to Telegram?"
        bind = ":__INSTALL_DIR__/config.yaml"

        [privacy.config.telegram_link_preview]
        ask = "Enable URL Preview?"
        type = "boolean"
        yes = "true"
        no = "false"
        help = "Should the Bridge detect URLs in outgoing messages, ask the HomeServer to generate a Preview, and send it to Telegram?"
        bind = ":__INSTALL_DIR__/config.yaml"

[advanced]
name = "Advanced Settings"
services = ["__APP__"]

    [advanced.help]
    name = "SETTINGS FOR EXPERTS IN SERVER ADMINISTRATION"

        [advanced.help.text]
        ask = "!! There are **security and privacy risks** if you change these settings without knowing what you do !!"
        type = "markdown"

    [advanced.telegram]
    name = "Telegram API MetaData"

        [advanced.telegram.username_template]
        ask = "Localpart template of MXIDs for Telegram users"
        type = "string"
        help = "Defaults to 'telegram_{userid}'. '{userid}' is replaced with the user ID of the Telegram user"
        bind = ":__INSTALL_DIR__/config.yaml"

        [advanced.telegram.alias_template]
        ask = "Localpart template of room aliases for Telegram portal rooms"
        type = "string"
        help = "Defaults to 'telegram_{groupname}'. '{groupname}' is replaced with the name part of the public channel/group invite link"
        bind = ":__INSTALL_DIR__/config.yaml"

        [advanced.telegram.displayname_template]
        ask = "Displayname template for Telegram users"
        type = "string"
        help = "Defaults to '{displayname} (Telegram)'. '{displayname}' is replaced with the display name of the Telegram user"
        bind = ":__INSTALL_DIR__/config.yaml"

        [advanced.telegram.device_model]
        ask = "Device info sent to Telegram"
        type = "string"
        help = "Defaults to 'mautrix-telegram'. 'auto' would set OS name+version"
        bind = ":__INSTALL_DIR__/config.yaml"
        
    [advanced.appservice]
    name = "HomeServer Application Service"

        [advanced.appservice.async_media]
        ask = "Enable asynchronous media uploads?"
        type = "boolean"
        yes = "true"
        no = "false"
        help = "Enable only if HomeServer supports https://github.com/matrix-org/matrix-spec-proposals/pull/2246"
        bind = ":__INSTALL_DIR__/config.yaml"

        [advanced.appservice.ephemeral_events]
        ask = "Receive Ephemeral Events via AppService transactions?"
        type = "boolean"
        yes = "true"
        no = "false"
        help = "Enable only if HomeServer supports MSC2409 (i.e. Synapse 1.22+). If enabled, you should disable bridge -> 'sync_with_custom_puppets'."
        bind = ":__INSTALL_DIR__/config.yaml"

    [advanced.metrics]
    name = "Prometheus Metrics"

        [advanced.metrics.enable_metrics]
        ask = "Enable Prometheus Metrics?"
        type = "boolean"
        yes = "true"
        no = "false"
        help = "Requires prometheus-client to be installed"
        bind = "metrics>enabled:__INSTALL_DIR__/config.yaml"

        [advanced.metrics.listen_port]
        ask = "Port for the Metrics listener?"
        type = "string"
        help = "Defaults to: '8000'. The path is always /metrics"
        bind = "metrics>listen_port:__INSTALL_DIR__/config.yaml"
        visible = "enable_metrics"

