#!/bin/bash

source _common.sh
source /usr/share/yunohost/helpers

server_name=$(ynh_app_setting_get --key=server_name)
synapse_db_name="matrix_$synapse_instance"

#=================================================
# GET CONFIG PANEL SETTINGS
#=================================================
async_media=$(ynh_app_setting_get --key=async_media)
bot_displayname=$(ynh_app_setting_get --key=bot_displayname)
bot_username=$(ynh_app_setting_get --key=bot_username)
bot_avatar=$(ynh_app_setting_get --key=bot_avatar)
device_model=$(ynh_app_setting_get --key=device_model)
ephemeral_events=$(ynh_app_setting_get --key=ephemeral_events)
enable_metrics=$(ynh_app_setting_get --key=enable_metrics)
listen_port=$(ynh_app_setting_get --key=listen_port)
alias_template=$(ynh_app_setting_get --key=alias_template)
displayname_template=$(ynh_app_setting_get --key=displayname_template)
username_template=$(ynh_app_setting_get --key=username_template)
delivery_receipts=$(ynh_app_setting_get --key=delivery_receipts)
telegram_link_preview=$(ynh_app_setting_get --key=telegram_link_preview)
encryption_default=$(ynh_app_setting_get --key=encryption_default)
encryption_require=$(ynh_app_setting_get --key=encryption_require)

listrelaybot=$(ynh_app_setting_get --key=listrelaybot)
listuser=$(ynh_app_setting_get --key=listuser)
listpuppeting=$(ynh_app_setting_get --key=listpuppeting)
listfull=$(ynh_app_setting_get --key=listfull)
listadmin=$(ynh_app_setting_get --key=listadmin)

ynh_script_progression "Checking version..."

#=================================================
# STOP SYSTEMD SERVICE
#=================================================
ynh_script_progression "Stopping $app's systemd service..."

ynh_systemctl --service=$app --action="stop"

#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression "Ensuring downward compatibility..."

# If appserviceid doesn't exist, create it
if [ -z "$appserviceid" ]
then
  appserviceid=$app
  ynh_app_setting_set --key=appserviceid --value=$appserviceid
fi

# If db_name doesn't exist, create it
if [ -z "$db_name" ]
then
  db_name=$(ynh_app_setting_get --key=mautrix_bridge_db_name)
  # db_name and db_user share the same value
  db_user=$db_name
  ynh_app_setting_set --key=db_name --value=$db_name
fi

# If db_pwd doesn't exist, create it
if [ -z "$db_pwd" ]
then
  db_pwd=$(ynh_app_setting_get --key=mautrix_bridge_db_pwd)
  ynh_app_setting_set --key=psqlpwd --value=$db_pwd
fi

#=================================================
# SET STANDARD SETTINGS FROM DEFAULT CONFIG
#=================================================

if [ -z "$async_media" ]
then
  async_media="false"
  ynh_app_setting_set --key=async_media --value=$async_media
fi
if [ -z "$bot_username" ]
then
  bot_username="$botname"
  ynh_app_setting_set --key=bot_username --value=$bot_username
fi
if [ -z "$bot_displayname" ]
then
  bot_displayname="Telegram bridge bot"
  ynh_app_setting_set --key=bot_displayname --value=$bot_displayname
fi
if [ -z "$bot_avatar" ]
then
  bot_avatar="mxc://maunium.net/tJCRmUyJDsgRNgqhOgoiHWbX"
  ynh_app_setting_set --key=bot_avatar --value=$bot_avatar
fi
if [ -z "$device_model" ]
then
  device_model="mautrix-telegram"
  ynh_app_setting_set --key=device_model --value=$device_model
fi
if [ -z "$ephemeral_events" ]
then
  ephemeral_events="false"
  ynh_app_setting_set --key=ephemeral_events --value=$ephemeral_events
fi
if [ -z "$enable_metrics" ]
then
  enable_metrics="false"
  ynh_app_setting_set --key=enable_metrics --value=$enable_metrics
fi
if [ -z "$listen_port" ]
then
  listen_port="8000"
  ynh_app_setting_set --key=listen_port --value=$listen_port
fi
if [ -z "$alias_template" ]
then
  alias_template="telegram_{userid}"
  ynh_app_setting_set --key=alias_template --value=$alias_template
fi
if [ -z "$displayname_template" ]
then
  displayname_template="{displayname} (Telegram)"
  ynh_app_setting_set --key=displayname_template --value=$displayname_template
fi
if [ -z "$username_template" ]
then
  username_template="telegram_{userid}"
  ynh_app_setting_set --key=username_template --value=$username_template
fi
if [ -z "$delivery_receipts" ]
then
  delivery_receipts="false"
  ynh_app_setting_set --key=delivery_receipts --value=$delivery_receipts
fi
if [ -z "$telegram_link_preview" ]
then
  telegram_link_preview="false"
  ynh_app_setting_set --key=telegram_link_preview --value=$telegram_link_preview
fi
if [ -z "$encryption_default" ]
then
  encryption_default="false"
  ynh_app_setting_set --key=encryption_default --value=$encryption_default
fi
if [ -z "$encryption_require" ]
then
  encryption_require="false"
  ynh_app_setting_set --key=encryption_require --value=$encryption_require
fi
if [ -z "$listrelaybot" ]
then
    listrelaybot="*"
    ynh_app_setting_set --key=listrelaybot --value=$listrelaybot
fi
if [ -z "$listuser" ]
then
    listuser=""
    ynh_app_setting_set --key=listuser --value=$listuser
fi
if [ -z "$listpuppeting" ]
then
    listpuppeting=$(ynh_app_setting_get --key=botusers)
    ynh_app_setting_set --key=listpuppeting --value=$listpuppeting
    ynh_app_setting_delete --key=botusers
fi
if [ -z "$listfull" ]
then
    listfull=""
    ynh_app_setting_set --key=listfull --value=$listfull
fi
if [ -z "$listadmin" ]
then
    listadmin=$(ynh_app_setting_get --key=botadmin)
    ynh_app_setting_set --key=listadmin --value=$listadmin
    ynh_app_setting_delete --key=botadmin
fi
#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

# FIXME: this is still supported but the recommendation is now to *always* re-setup the app sources wether or not the upstream sources changed
if ynh_app_upstream_version_changed
then
	ynh_script_progression "Upgrading source files..."

	# Download, check integrity, uncompress and patch the source from app.src
	ynh_setup_source --dest_dir="$install_dir/src"
fi

#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 750 "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod -R 750 "$install_dir"
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:$app "$install_dir"
#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression "Updating configuration..."

# reset permissions to be able to apply_permissions with app_setting values after upgrade
listrelaybot_=$listrelaybot
listuser_=$listuser
listpuppeting_=$listpuppeting
listfull_=$listfull
listadmin_=$listadmin
listrelaybot="*"
listuser="@user:domain.tld"
listpuppeting="@puppet:domain.tld"
listfull="@full:domain.tld"
listadmin="@admin:domain.tld"

# main configuration
ynh_backup_if_checksum_is_different "$install_dir/config.yaml"
# as_token hs_token are autogenerated, save them before regenerating the config
as_token=$(grep "as_token:" "$install_dir/config.yaml" | sed -r "s/ *as_token: *//")
hs_token=$(grep "hs_token:" "$install_dir/config.yaml" | sed -r "s/ *hs_token: *//")
is_encryption_enabled="$encryption"

if [ $encryption -eq 1 ]; then
  is_encryption_enabled="true"
fi

ynh_config_add --template="config.yaml" --destination="$install_dir/config.yaml"

#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chmod 400 "$install_dir/config.yaml"
#REMOVEME? Assuming the file is setup using ynh_config_add, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown $app:$app "$install_dir/config.yaml"

listrelaybot=$listrelaybot_
listuser=$listuser_
listpuppeting=$listpuppeting_
listfull=$listfull_
listadmin=$listadmin_

# apply_permissions to have correct syntax in config file
set__listrelaybot
set__listuser
set__listpuppeting
set__listfull
set__listadmin

#=================================================
# UPGRADE MAUTRIX-BRIDGE PYTHON MODULE
#=================================================
ynh_script_progression "Upgrading Mautrix-Bridge Python Module..."

python3 -m venv $install_dir
export HOME=$install_dir
$install_dir/bin/pip3 install --upgrade pip setuptools wheel
$install_dir/bin/pip3 install --upgrade $install_dir/src/mautrix-telegram.tar.gz[e2be,speedups,qr_login] # metrics,hq_thumbnails,sqlite,formattednumbers

#=================================================
# REGISTER SYNAPSE APP-SERVICE
#=================================================
ynh_script_progression "Registering Synapse app-service"

$install_dir/bin/python3 -m mautrix_telegram -g -c $install_dir/config.yaml -r "/etc/matrix-$synapse_instance/app-service/$app.yaml"
/opt/yunohost/matrix-$synapse_instance/update_synapse_for_appservice.sh || ynh_die "Synapse can't restart with the appservice configuration"

# Set permissions on app files
#REMOVEME? Assuming the install dir is setup using ynh_setup_source, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:$app "$install_dir"
ynh_store_file_checksum "/etc/matrix-$synapse_instance/app-service/$app.yaml"
ynh_store_file_checksum "$install_dir/config.yaml"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression "Upgrading systemd configuration..."

# Create a dedicated systemd config
ynh_config_add_systemd

#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression "Upgrading logrotate configuration..."

# Use logrotate to manage app-specific logfile(s)
ynh_config_add_logrotate  "/var/log/$app/$app.log"
#REMOVEME? Assuming ynh_config_add_logrotate is called, the proper chmod/chowns are now already applied and it shouldn't be necessary to tweak perms | chown -R $app:$app /var/log/$app

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression "Integrating service in YunoHost..."

yunohost service add $app --description="$app daemon for bridging Telegram and Matrix messages" --log="/var/log/$app/$app.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression "Starting $app's systemd service..."

# Start a systemd service
ynh_systemctl --service=$app --action="start"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression "Upgrade of $app completed"
